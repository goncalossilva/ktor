public abstract interface class io/ktor/server/engine/ApplicationEngine {
	public abstract fun getApplication ()Lio/ktor/server/application/Application;
	public abstract fun getEnvironment ()Lio/ktor/server/engine/ApplicationEngineEnvironment;
	public abstract fun networkAddresses (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun start (Z)Lio/ktor/server/engine/ApplicationEngine;
	public abstract fun stop (JJ)V
}

public class io/ktor/server/engine/ApplicationEngine$Configuration {
	public fun <init> ()V
	public final fun getCallGroupSize ()I
	public final fun getConnectionGroupSize ()I
	public final fun getParallelism ()I
	public final fun getWorkerGroupSize ()I
	public final fun setCallGroupSize (I)V
	public final fun setConnectionGroupSize (I)V
	public final fun setWorkerGroupSize (I)V
}

public final class io/ktor/server/engine/ApplicationEngine$DefaultImpls {
	public static fun getApplication (Lio/ktor/server/engine/ApplicationEngine;)Lio/ktor/server/application/Application;
	public static synthetic fun start$default (Lio/ktor/server/engine/ApplicationEngine;ZILjava/lang/Object;)Lio/ktor/server/engine/ApplicationEngine;
}

public abstract interface class io/ktor/server/engine/ApplicationEngineEnvironment : io/ktor/server/application/ApplicationEnvironment {
	public abstract fun getApplication ()Lio/ktor/server/application/Application;
	public abstract fun getConnectors ()Ljava/util/List;
	public abstract fun start ()V
	public abstract fun stop ()V
}

public final class io/ktor/server/engine/ApplicationEngineEnvironmentBuilder {
	public fun <init> ()V
	public final fun build (Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ApplicationEngineEnvironment;
	public final fun getClassLoader ()Ljava/lang/ClassLoader;
	public final fun getConfig ()Lio/ktor/server/config/ApplicationConfig;
	public final fun getConnectors ()Ljava/util/List;
	public final fun getDevelopmentMode ()Z
	public final fun getLog ()Lorg/slf4j/Logger;
	public final fun getModules ()Ljava/util/List;
	public final fun getParentCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getRootPath ()Ljava/lang/String;
	public final fun getWatchPaths ()Ljava/util/List;
	public final fun module (Lkotlin/jvm/functions/Function1;)V
	public final fun setClassLoader (Ljava/lang/ClassLoader;)V
	public final fun setConfig (Lio/ktor/server/config/ApplicationConfig;)V
	public final fun setDevelopmentMode (Z)V
	public final fun setLog (Lorg/slf4j/Logger;)V
	public final fun setParentCoroutineContext (Lkotlin/coroutines/CoroutineContext;)V
	public final fun setRootPath (Ljava/lang/String;)V
	public final fun setWatchPaths (Ljava/util/List;)V
}

public final class io/ktor/server/engine/ApplicationEngineEnvironmentKt {
	public static final fun applicationEngineEnvironment (Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ApplicationEngineEnvironment;
}

public final class io/ktor/server/engine/ApplicationEngineEnvironmentReloading : io/ktor/server/engine/ApplicationEngineEnvironment {
	public static final field Companion Lio/ktor/server/engine/ApplicationEngineEnvironmentReloading$Companion;
	public fun <init> (Ljava/lang/ClassLoader;Lorg/slf4j/Logger;Lio/ktor/server/config/ApplicationConfig;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lkotlin/coroutines/CoroutineContext;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/ClassLoader;Lorg/slf4j/Logger;Lio/ktor/server/config/ApplicationConfig;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lkotlin/coroutines/CoroutineContext;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ljava/lang/ClassLoader;Lorg/slf4j/Logger;Lio/ktor/server/config/ApplicationConfig;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lkotlin/coroutines/CoroutineContext;Ljava/lang/String;Z)V
	public synthetic fun <init> (Ljava/lang/ClassLoader;Lorg/slf4j/Logger;Lio/ktor/server/config/ApplicationConfig;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lkotlin/coroutines/CoroutineContext;Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getApplication ()Lio/ktor/server/application/Application;
	public fun getClassLoader ()Ljava/lang/ClassLoader;
	public fun getConfig ()Lio/ktor/server/config/ApplicationConfig;
	public fun getConnectors ()Ljava/util/List;
	public fun getDevelopmentMode ()Z
	public fun getLog ()Lorg/slf4j/Logger;
	public final fun getModulesNames$ktor_server_host_common ()Ljava/util/List;
	public fun getMonitor ()Lio/ktor/events/Events;
	public fun getParentCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getRootPath ()Ljava/lang/String;
	public final fun reload ()V
	public fun start ()V
	public fun stop ()V
}

public final class io/ktor/server/engine/ApplicationEngineEnvironmentReloading$Companion {
}

public abstract interface class io/ktor/server/engine/ApplicationEngineFactory {
	public abstract fun create (Lio/ktor/server/engine/ApplicationEngineEnvironment;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ApplicationEngine;
}

public final class io/ktor/server/engine/ApplicationEngineJvmKt {
	public static final fun stop (Lio/ktor/server/engine/ApplicationEngine;JJLjava/util/concurrent/TimeUnit;)V
}

public abstract class io/ktor/server/engine/BaseApplicationCall : io/ktor/server/application/ApplicationCall {
	public fun <init> (Lio/ktor/server/application/Application;)V
	public final fun getApplication ()Lio/ktor/server/application/Application;
	public final fun getAttributes ()Lio/ktor/util/Attributes;
	public fun getParameters ()Lio/ktor/http/Parameters;
	public abstract fun getRequest ()Lio/ktor/server/engine/BaseApplicationRequest;
	public abstract fun getResponse ()Lio/ktor/server/engine/BaseApplicationResponse;
	protected final fun putResponseAttribute (Lio/ktor/server/engine/BaseApplicationResponse;)V
	public static synthetic fun putResponseAttribute$default (Lio/ktor/server/engine/BaseApplicationCall;Lio/ktor/server/engine/BaseApplicationResponse;ILjava/lang/Object;)V
}

public abstract class io/ktor/server/engine/BaseApplicationEngine : io/ktor/server/engine/ApplicationEngine {
	public fun <init> (Lio/ktor/server/engine/ApplicationEngineEnvironment;Lio/ktor/server/engine/EnginePipeline;)V
	public synthetic fun <init> (Lio/ktor/server/engine/ApplicationEngineEnvironment;Lio/ktor/server/engine/EnginePipeline;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getApplication ()Lio/ktor/server/application/Application;
	public final fun getEnvironment ()Lio/ktor/server/engine/ApplicationEngineEnvironment;
	protected final fun getNetworkAddresses ()Lkotlinx/coroutines/CompletableDeferred;
	public final fun getPipeline ()Lio/ktor/server/engine/EnginePipeline;
	public fun networkAddresses (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class io/ktor/server/engine/BaseApplicationEngine$Configuration : io/ktor/server/engine/ApplicationEngine$Configuration {
	public fun <init> ()V
}

public final class io/ktor/server/engine/BaseApplicationEngineKt {
}

public abstract class io/ktor/server/engine/BaseApplicationRequest : io/ktor/server/request/ApplicationRequest {
	public fun <init> (Lio/ktor/server/application/ApplicationCall;)V
	public final fun getCall ()Lio/ktor/server/application/ApplicationCall;
	public fun getPipeline ()Lio/ktor/server/request/ApplicationReceivePipeline;
}

public abstract class io/ktor/server/engine/BaseApplicationResponse : io/ktor/server/response/ApplicationResponse {
	public static final field Companion Lio/ktor/server/engine/BaseApplicationResponse$Companion;
	public fun <init> (Lio/ktor/server/application/ApplicationCall;)V
	protected final fun commitHeaders (Lio/ktor/http/content/OutgoingContent;)V
	public final fun getCall ()Lio/ktor/server/application/ApplicationCall;
	public fun getCookies ()Lio/ktor/server/response/ResponseCookies;
	public final fun getPipeline ()Lio/ktor/server/response/ApplicationSendPipeline;
	public fun push (Lio/ktor/server/response/ResponsePushBuilder;)V
	protected fun respondFromBytes ([BLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected fun respondFromChannel (Lio/ktor/utils/io/ByteReadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected fun respondNoContent (Lio/ktor/http/content/OutgoingContent$NoContent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected fun respondOutgoingContent (Lio/ktor/http/content/OutgoingContent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun respondUpgrade (Lio/ktor/http/content/OutgoingContent$ProtocolUpgrade;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected fun respondWriteChannelContent (Lio/ktor/http/content/OutgoingContent$WriteChannelContent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun responseChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun setStatus (Lio/ktor/http/HttpStatusCode;)V
	public fun status ()Lio/ktor/http/HttpStatusCode;
	public fun status (Lio/ktor/http/HttpStatusCode;)V
}

public final class io/ktor/server/engine/BaseApplicationResponse$BodyLengthIsTooLong : java/lang/IllegalStateException, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (J)V
	public fun createCopy ()Lio/ktor/server/engine/BaseApplicationResponse$BodyLengthIsTooLong;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
}

public final class io/ktor/server/engine/BaseApplicationResponse$BodyLengthIsTooSmall : java/lang/IllegalStateException, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (JJ)V
	public fun createCopy ()Lio/ktor/server/engine/BaseApplicationResponse$BodyLengthIsTooSmall;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
}

public final class io/ktor/server/engine/BaseApplicationResponse$Companion {
	public final fun getEngineResponseAtributeKey ()Lio/ktor/util/AttributeKey;
	public final fun setupSendPipeline (Lio/ktor/server/response/ApplicationSendPipeline;)V
}

public final class io/ktor/server/engine/BaseApplicationResponse$InvalidHeaderForContent : java/lang/IllegalStateException, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun createCopy ()Lio/ktor/server/engine/BaseApplicationResponse$InvalidHeaderForContent;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
}

public final class io/ktor/server/engine/BaseApplicationResponse$ResponseAlreadySentException : java/lang/IllegalStateException {
	public fun <init> ()V
}

public final class io/ktor/server/engine/BlockingBridgeKt {
	public static final fun safeToRunInPlace ()Z
}

public final class io/ktor/server/engine/ClassLoadersKt {
	public static final fun allURLs (Ljava/lang/ClassLoader;)Ljava/util/Set;
}

public final class io/ktor/server/engine/CommandLineKt {
	public static final fun commandLineEnvironment ([Ljava/lang/String;)Lio/ktor/server/engine/ApplicationEngineEnvironment;
	public static final fun loadCommonConfiguration (Lio/ktor/server/engine/BaseApplicationEngine$Configuration;Lio/ktor/server/config/ApplicationConfig;)V
	public static final fun splitPair (Ljava/lang/String;C)Lkotlin/Pair;
}

public final class io/ktor/server/engine/ConfigKeys {
	public static final field INSTANCE Lio/ktor/server/engine/ConfigKeys;
	public final fun getApplicationIdPath ()Ljava/lang/String;
	public final fun getDevelopmentModeKey ()Ljava/lang/String;
	public final fun getHostConfigPath ()Ljava/lang/String;
	public final fun getHostPortPath ()Ljava/lang/String;
	public final fun getHostSslKeyAlias ()Ljava/lang/String;
	public final fun getHostSslKeyStore ()Ljava/lang/String;
	public final fun getHostSslKeyStorePassword ()Ljava/lang/String;
	public final fun getHostSslPortPath ()Ljava/lang/String;
	public final fun getHostSslPrivateKeyPassword ()Ljava/lang/String;
	public final fun getHostWatchPaths ()Ljava/lang/String;
	public final fun getRootPathPath ()Ljava/lang/String;
}

public final class io/ktor/server/engine/ConnectorType {
	public static final field Companion Lio/ktor/server/engine/ConnectorType$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/ktor/server/engine/ConnectorType;
	public static synthetic fun copy$default (Lio/ktor/server/engine/ConnectorType;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/server/engine/ConnectorType;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/engine/ConnectorType$Companion {
	public final fun getHTTP ()Lio/ktor/server/engine/ConnectorType;
	public final fun getHTTPS ()Lio/ktor/server/engine/ConnectorType;
}

public final class io/ktor/server/engine/DefaultEnginePipelineKt {
	public static final fun defaultEnginePipeline (Lio/ktor/server/application/ApplicationEnvironment;)Lio/ktor/server/engine/EnginePipeline;
	public static final fun defaultExceptionStatusCode (Ljava/lang/Throwable;)Lio/ktor/http/HttpStatusCode;
	public static final fun handleFailure (Lio/ktor/server/application/ApplicationCall;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun logError (Lio/ktor/server/application/ApplicationCall;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/server/engine/DefaultTransformJvmKt {
	public static final fun defaultPlatformTransformations (Lio/ktor/util/pipeline/PipelineContext;Lio/ktor/server/request/ApplicationReceiveRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun readTextWithCustomCharset (Lio/ktor/utils/io/core/ByteReadPacket;Ljava/nio/charset/Charset;)Ljava/lang/String;
}

public final class io/ktor/server/engine/DefaultTransformKt {
	public static final fun installDefaultTransformations (Lio/ktor/server/request/ApplicationReceivePipeline;)V
	public static final fun installDefaultTransformations (Lio/ktor/server/response/ApplicationSendPipeline;)V
	public static final fun readText (Lio/ktor/utils/io/ByteReadChannel;Ljava/nio/charset/Charset;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun withContentType (Lio/ktor/server/application/ApplicationCall;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class io/ktor/server/engine/DefaultUncaughtExceptionHandler : kotlinx/coroutines/CoroutineExceptionHandler {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public fun <init> (Lorg/slf4j/Logger;)V
	public fun fold (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public fun get (Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;
	public fun getKey ()Lkotlin/coroutines/CoroutineContext$Key;
	public fun handleException (Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V
	public fun minusKey (Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;
	public fun plus (Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;
}

public final class io/ktor/server/engine/EmbeddedServerKt {
	public static final fun embeddedServer (Lio/ktor/server/engine/ApplicationEngineFactory;ILjava/lang/String;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ApplicationEngine;
	public static final fun embeddedServer (Lio/ktor/server/engine/ApplicationEngineFactory;Lio/ktor/server/engine/ApplicationEngineEnvironment;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ApplicationEngine;
	public static final fun embeddedServer (Lkotlinx/coroutines/CoroutineScope;Lio/ktor/server/engine/ApplicationEngineFactory;ILjava/lang/String;Ljava/util/List;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ApplicationEngine;
	public static final fun embeddedServer (Lkotlinx/coroutines/CoroutineScope;Lio/ktor/server/engine/ApplicationEngineFactory;[Lio/ktor/server/engine/EngineConnectorConfig;Ljava/util/List;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ApplicationEngine;
	public static synthetic fun embeddedServer$default (Lio/ktor/server/engine/ApplicationEngineFactory;ILjava/lang/String;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/engine/ApplicationEngine;
	public static synthetic fun embeddedServer$default (Lio/ktor/server/engine/ApplicationEngineFactory;Lio/ktor/server/engine/ApplicationEngineEnvironment;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/engine/ApplicationEngine;
	public static synthetic fun embeddedServer$default (Lkotlinx/coroutines/CoroutineScope;Lio/ktor/server/engine/ApplicationEngineFactory;ILjava/lang/String;Ljava/util/List;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/engine/ApplicationEngine;
	public static synthetic fun embeddedServer$default (Lkotlinx/coroutines/CoroutineScope;Lio/ktor/server/engine/ApplicationEngineFactory;[Lio/ktor/server/engine/EngineConnectorConfig;Ljava/util/List;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/engine/ApplicationEngine;
}

public class io/ktor/server/engine/EngineConnectorBuilder : io/ktor/server/engine/EngineConnectorConfig {
	public fun <init> ()V
	public fun <init> (Lio/ktor/server/engine/ConnectorType;)V
	public synthetic fun <init> (Lio/ktor/server/engine/ConnectorType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getHost ()Ljava/lang/String;
	public fun getPort ()I
	public fun getType ()Lio/ktor/server/engine/ConnectorType;
	public fun setHost (Ljava/lang/String;)V
	public fun setPort (I)V
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/ktor/server/engine/EngineConnectorConfig {
	public abstract fun getHost ()Ljava/lang/String;
	public abstract fun getPort ()I
	public abstract fun getType ()Lio/ktor/server/engine/ConnectorType;
}

public final class io/ktor/server/engine/EngineConnectorConfigJvmKt {
	public static final fun sslConnector (Lio/ktor/server/engine/ApplicationEngineEnvironmentBuilder;Ljava/security/KeyStore;Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V
}

public final class io/ktor/server/engine/EngineConnectorConfigKt {
	public static final fun connector (Lio/ktor/server/engine/ApplicationEngineEnvironmentBuilder;Lkotlin/jvm/functions/Function1;)V
}

public final class io/ktor/server/engine/EngineContextCancellationHelperKt {
	public static final fun launchOnCancellation (Lkotlinx/coroutines/Job;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/CompletableJob;
	public static final fun stopServerOnCancellation (Lio/ktor/server/engine/ApplicationEngine;)Lkotlinx/coroutines/CompletableJob;
}

public final class io/ktor/server/engine/EnginePipeline : io/ktor/util/pipeline/Pipeline {
	public static final field Companion Lio/ktor/server/engine/EnginePipeline$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getDevelopmentMode ()Z
	public final fun getReceivePipeline ()Lio/ktor/server/request/ApplicationReceivePipeline;
	public final fun getSendPipeline ()Lio/ktor/server/response/ApplicationSendPipeline;
}

public final class io/ktor/server/engine/EnginePipeline$Companion {
	public final fun getBefore ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getCall ()Lio/ktor/util/pipeline/PipelinePhase;
}

public final class io/ktor/server/engine/EngineSSLConnectorBuilder : io/ktor/server/engine/EngineConnectorBuilder, io/ktor/server/engine/EngineSSLConnectorConfig {
	public fun <init> (Ljava/security/KeyStore;Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V
	public fun getKeyAlias ()Ljava/lang/String;
	public fun getKeyStore ()Ljava/security/KeyStore;
	public fun getKeyStorePassword ()Lkotlin/jvm/functions/Function0;
	public fun getKeyStorePath ()Ljava/io/File;
	public fun getPort ()I
	public fun getPrivateKeyPassword ()Lkotlin/jvm/functions/Function0;
	public fun getTrustStore ()Ljava/security/KeyStore;
	public fun getTrustStorePath ()Ljava/io/File;
	public fun setKeyAlias (Ljava/lang/String;)V
	public fun setKeyStore (Ljava/security/KeyStore;)V
	public fun setKeyStorePassword (Lkotlin/jvm/functions/Function0;)V
	public fun setKeyStorePath (Ljava/io/File;)V
	public fun setPort (I)V
	public fun setPrivateKeyPassword (Lkotlin/jvm/functions/Function0;)V
	public fun setTrustStore (Ljava/security/KeyStore;)V
	public fun setTrustStorePath (Ljava/io/File;)V
}

public abstract interface class io/ktor/server/engine/EngineSSLConnectorConfig : io/ktor/server/engine/EngineConnectorConfig {
	public abstract fun getKeyAlias ()Ljava/lang/String;
	public abstract fun getKeyStore ()Ljava/security/KeyStore;
	public abstract fun getKeyStorePassword ()Lkotlin/jvm/functions/Function0;
	public abstract fun getKeyStorePath ()Ljava/io/File;
	public abstract fun getPrivateKeyPassword ()Lkotlin/jvm/functions/Function0;
	public abstract fun getTrustStore ()Ljava/security/KeyStore;
	public abstract fun getTrustStorePath ()Ljava/io/File;
}

public final class io/ktor/server/engine/EnvironmentUtilsJvmKt {
	public static final fun buildApplicationConfig ([Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfig;
	public static final fun configurePlatformProperties (Lio/ktor/server/engine/ApplicationEngineEnvironmentBuilder;[Ljava/lang/String;)V
	public static final fun configureSSLConnectors (Lio/ktor/server/engine/ApplicationEngineEnvironmentBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
}

public final class io/ktor/server/engine/LongKt {
	public static final fun toStringFast (J)Ljava/lang/String;
}

public final class io/ktor/server/engine/OverridingClassLoader : java/lang/ClassLoader, java/io/Closeable {
	public fun <init> (Ljava/util/List;Ljava/lang/ClassLoader;)V
	public fun close ()V
}

public final class io/ktor/server/engine/ServerEngineUtilsJvmKt {
	public static final fun getWORKING_DIRECTORY_PATH ()Ljava/lang/String;
}

public final class io/ktor/server/engine/ServerHostUtilsKt {
	public static final fun methodName (Lkotlin/Function;)Ljava/lang/String;
}

public final class io/ktor/server/engine/ShutDownUrl {
	public fun <init> (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public final fun doShutdown (Lio/ktor/server/application/ApplicationCall;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getExitCode ()Lkotlin/jvm/functions/Function1;
	public final fun getUrl ()Ljava/lang/String;
}

public final class io/ktor/server/engine/ShutDownUrl$ApplicationCallPlugin : io/ktor/server/application/ApplicationPlugin {
	public static final field INSTANCE Lio/ktor/server/engine/ShutDownUrl$ApplicationCallPlugin;
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/server/application/ApplicationCallPipeline;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ShutDownUrl;
	public synthetic fun install (Lio/ktor/util/pipeline/Pipeline;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/server/engine/ShutDownUrl$Configuration {
	public fun <init> ()V
	public final fun getExitCodeSupplier ()Lkotlin/jvm/functions/Function1;
	public final fun getShutDownUrl ()Ljava/lang/String;
	public final fun setExitCodeSupplier (Lkotlin/jvm/functions/Function1;)V
	public final fun setShutDownUrl (Ljava/lang/String;)V
}

public final class io/ktor/server/engine/ShutDownUrl$EnginePlugin : io/ktor/server/application/ApplicationPlugin {
	public static final field INSTANCE Lio/ktor/server/engine/ShutDownUrl$EnginePlugin;
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/server/engine/EnginePipeline;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ShutDownUrl;
	public synthetic fun install (Lio/ktor/util/pipeline/Pipeline;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/server/engine/ShutdownHookJvmKt {
	public static final fun addShutdownHook (Lio/ktor/server/engine/ApplicationEngine;Lkotlin/jvm/functions/Function0;)V
}

public final class io/ktor/server/engine/internal/ApplicationUtilsJvmKt {
	public static final fun availableProcessorsBridge ()I
	public static final fun configureShutdownUrl (Lio/ktor/server/application/ApplicationEnvironment;Lio/ktor/server/engine/EnginePipeline;)V
	public static final fun getIOBridge (Lkotlinx/coroutines/Dispatchers;)Lkotlinx/coroutines/CoroutineDispatcher;
	public static final fun initCauseBridge (Ljava/lang/Throwable;Ljava/lang/Throwable;)V
	public static final fun printError (Ljava/lang/Object;)V
}

public final class io/ktor/server/engine/internal/ApplicationUtilsKt {
	public static final fun currentTimeMillisBridge ()J
}

public final class io/ktor/server/engine/internal/AutoReloadUtilsKt {
	public static final fun bestFunction (Ljava/util/List;)Lkotlin/reflect/KFunction;
	public static final fun getApplicationClassInstance ()Ljava/lang/Class;
	public static final fun getApplicationEnvironmentClassInstance ()Ljava/lang/Class;
	public static final fun getCurrentStartupModules ()Ljava/lang/ThreadLocal;
	public static final fun get_com_sun_nio_file_SensitivityWatchEventModifier_HIGH ()Ljava/nio/file/WatchEvent$Modifier;
	public static final fun isApplicableFunction (Lkotlin/reflect/KFunction;)Z
	public static final fun isApplication (Lkotlin/reflect/KParameter;)Z
	public static final fun isApplicationEnvironment (Lkotlin/reflect/KParameter;)Z
	public static final fun isParameterOfType (Lkotlin/reflect/KParameter;Ljava/lang/Class;)Z
	public static final fun loadClassOrNull (Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
	public static final fun takeIfNotFacade (Ljava/lang/Class;)Lkotlin/reflect/KClass;
}

public final class io/ktor/server/engine/internal/CallableUtilsKt {
	public static final fun executeModuleFunction (Lio/ktor/server/application/ApplicationEnvironment;Ljava/lang/ClassLoader;Ljava/lang/String;Lio/ktor/server/application/Application;)V
}

public final class io/ktor/server/engine/internal/ExceptionUtilsJvmKt {
}

public final class io/ktor/server/engine/internal/ReloadingException : java/lang/RuntimeException {
	public fun <init> (Ljava/lang/String;)V
}

