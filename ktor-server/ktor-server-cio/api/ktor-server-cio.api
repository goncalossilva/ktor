public final class io/ktor/server/cio/CIO : io/ktor/server/engine/ApplicationEngineFactory {
	public static final field INSTANCE Lio/ktor/server/cio/CIO;
	public fun create (Lio/ktor/server/engine/ApplicationEngineEnvironment;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/cio/CIOApplicationEngine;
	public synthetic fun create (Lio/ktor/server/engine/ApplicationEngineEnvironment;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ApplicationEngine;
}

public final class io/ktor/server/cio/CIOApplicationCall : io/ktor/server/engine/BaseApplicationCall, io/ktor/server/application/ApplicationCallWithContext {
	public fun <init> (Lio/ktor/server/application/Application;Lio/ktor/http/cio/Request;Lio/ktor/utils/io/ByteReadChannel;Lio/ktor/utils/io/ByteWriteChannel;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CompletableDeferred;Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lkotlin/coroutines/CoroutineContext;)V
	public fun afterFinish (Lkotlin/jvm/functions/Function1;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getRequest ()Lio/ktor/server/cio/CIOApplicationRequest;
	public synthetic fun getRequest ()Lio/ktor/server/engine/BaseApplicationRequest;
	public synthetic fun getRequest ()Lio/ktor/server/request/ApplicationRequest;
	public fun getResponse ()Lio/ktor/server/cio/CIOApplicationResponse;
	public synthetic fun getResponse ()Lio/ktor/server/engine/BaseApplicationResponse;
	public synthetic fun getResponse ()Lio/ktor/server/response/ApplicationResponse;
	public final fun release$ktor_server_cio ()V
}

public final class io/ktor/server/cio/CIOApplicationEngine : io/ktor/server/engine/BaseApplicationEngine {
	public fun <init> (Lio/ktor/server/engine/ApplicationEngineEnvironment;Lkotlin/jvm/functions/Function1;)V
	public fun start (Z)Lio/ktor/server/engine/ApplicationEngine;
	public fun stop (JJ)V
}

public final class io/ktor/server/cio/CIOApplicationEngine$Configuration : io/ktor/server/engine/BaseApplicationEngine$Configuration {
	public fun <init> ()V
	public final fun getConnectionIdleTimeoutSeconds ()I
	public final fun setConnectionIdleTimeoutSeconds (I)V
}

public final class io/ktor/server/cio/CIOApplicationRequest : io/ktor/server/engine/BaseApplicationRequest {
	public fun <init> (Lio/ktor/server/application/ApplicationCall;Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/ktor/utils/io/ByteReadChannel;Lio/ktor/http/cio/Request;)V
	public fun getCookies ()Lio/ktor/server/request/RequestCookies;
	public fun getHeaders ()Lio/ktor/http/Headers;
	public fun getLocal ()Lio/ktor/http/RequestConnectionPoint;
	public fun getQueryParameters ()Lio/ktor/http/Parameters;
	public fun receiveChannel ()Lio/ktor/utils/io/ByteReadChannel;
	public final fun release$ktor_server_cio ()V
}

public final class io/ktor/server/cio/CIOApplicationResponse : io/ktor/server/engine/BaseApplicationResponse {
	public fun <init> (Lio/ktor/server/cio/CIOApplicationCall;Lio/ktor/utils/io/ByteWriteChannel;Lio/ktor/utils/io/ByteReadChannel;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CompletableDeferred;)V
	public fun getHeaders ()Lio/ktor/server/response/ResponseHeaders;
}

public final class io/ktor/server/cio/EngineMain {
	public static final field INSTANCE Lio/ktor/server/cio/EngineMain;
	public static final fun main ([Ljava/lang/String;)V
}

public final class io/ktor/server/cio/HttpServer {
	public fun <init> (Lkotlinx/coroutines/Job;Lkotlinx/coroutines/Job;Lkotlinx/coroutines/Deferred;)V
	public final fun getAcceptJob ()Lkotlinx/coroutines/Job;
	public final fun getRootServerJob ()Lkotlinx/coroutines/Job;
	public final fun getServerSocket ()Lkotlinx/coroutines/Deferred;
}

public final class io/ktor/server/cio/HttpServerKt {
	public static final fun httpServer (Lkotlinx/coroutines/CoroutineScope;Lio/ktor/server/cio/HttpServerSettings;Lkotlin/jvm/functions/Function6;)Lio/ktor/server/cio/HttpServer;
}

public final class io/ktor/server/cio/HttpServerSettings {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;IJ)V
	public synthetic fun <init> (Ljava/lang/String;IJILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun component3 ()J
	public final fun copy (Ljava/lang/String;IJ)Lio/ktor/server/cio/HttpServerSettings;
	public static synthetic fun copy$default (Lio/ktor/server/cio/HttpServerSettings;Ljava/lang/String;IJILjava/lang/Object;)Lio/ktor/server/cio/HttpServerSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConnectionIdleTimeoutSeconds ()J
	public final fun getHost ()Ljava/lang/String;
	public final fun getPort ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/cio/backend/HttpServerKt {
	public static final fun httpServer (Lkotlinx/coroutines/CoroutineScope;Lio/ktor/server/cio/HttpServerSettings;Lkotlin/jvm/functions/Function3;)Lio/ktor/server/cio/HttpServer;
}

public final class io/ktor/server/cio/internal/CoroutineUtilsJvmKt {
	public static final fun getIOBridge (Lkotlinx/coroutines/Dispatchers;)Lkotlinx/coroutines/CoroutineDispatcher;
}

